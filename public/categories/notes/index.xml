<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>notes on UNKNOWN SPACE</title>
    <link>https://shuoyin03.github.io/categories/notes/</link>
    <description>Recent content in notes on UNKNOWN SPACE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://shuoyin03.github.io/categories/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Natural Language Processing - Information Extraction</title>
      <link>https://shuoyin03.github.io/2024/01/18/nlp-information-extraction/</link>
      <pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/18/nlp-information-extraction/</guid>
      <description>What is information Extraction? Entities Named Entity Recognition (NER) Many types of named entities
Dictionary-Based: Look-Up Approach In dictionary-based approach, system will only recognize those words appears in the dictionary, it is simple and fast. However, the more common things are, it can&amp;rsquo;t enumerate all names within the texts and can&amp;rsquo;t resolve ambiguity. Moreover, the maintenance of lists is also a problem.
Rule-Based Approach The rule-based approach uses some context clues to identify entities.</description>
    </item>
    
    <item>
      <title>Natural Language Processing - Speech Processing</title>
      <link>https://shuoyin03.github.io/2024/01/18/nlp-speech-processing/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/18/nlp-speech-processing/</guid>
      <description>Why is Speech Recognition so Hard We could analyze this problem in two perspectives: From a linguistic perspective, there are many questions to be asked - How many speakers are there? Are they speaking continuously or isolated? Are there any environment noise? How are the channel conditions? Speaker tuned for a particular speaker, or speaker independent? Every question could act on a great impact on the performance. And from a machine learning perspective, if we define speech recognition as a classification problem, it contains very high dimensional output space.</description>
    </item>
    
    <item>
      <title>Leetcode journal - Beginning</title>
      <link>https://shuoyin03.github.io/2024/01/16/leetcode-beginning/</link>
      <pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/16/leetcode-beginning/</guid>
      <description>Yesterday I have just complete the online assessment of booking.com, which I still feel a little bit frustrated - I could make lots of mistakes and stuck in such easy &amp;ldquo;algorithm&amp;rdquo; questions. During this process I could find lots of problems in my mindset, including but not limited to:
Lack of the ability analyzing the corner cases, make changes to algorithm based on the corner cases Lack of awareness of algorithms.</description>
    </item>
    
    <item>
      <title>Natural Language Processing - Deep Learning I</title>
      <link>https://shuoyin03.github.io/2024/01/16/nlp-deep-learning1/</link>
      <pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/16/nlp-deep-learning1/</guid>
      <description>Basic Neural Network Structure Single neuron, the most basic components of neural networks, consist of multiple inputs $[x_1, x_2, &amp;hellip;, x_d]$ and an output $y$. The above picture demonstrated, each input $x$ is multiply by a weight $w$, their sum is added with a bias and then activated by a activation function. The training process, is to find the best y value from updating the weight in each training epoch.</description>
    </item>
    
    <item>
      <title>Advanced Distributed System - NoSQL</title>
      <link>https://shuoyin03.github.io/2024/01/12/distributed-system-nosql/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/12/distributed-system-nosql/</guid>
      <description>Unlike SQL focus on data integrity and strict transactional semantics, NoSQL focus on all applications need elastic scaling and simple operations, which operating data in isolation, some characteristics of NoSQL are: expose a simple call-level interface or protocol, offer less strict transactional guarantees, replicate and distribute data over servers&amp;hellip; Let&amp;rsquo;s have a look at NoSQL in this blog.
Types of NoSQL We could define NoSQL into three types: Key-Value, Document, and Wide Column.</description>
    </item>
    
    <item>
      <title>Advanced Distributed System - Batch Data and MapReduce</title>
      <link>https://shuoyin03.github.io/2024/01/09/distributed-system-big-data/</link>
      <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/09/distributed-system-big-data/</guid>
      <description>Batch processing - a word describing tasks that can run without user interactions, or can be scheduled to run as resources permit. Batch data sets might be huge and need parallel processing. MapReduce is a programming model designed for batch processing, including two steps: &amp;lsquo;map&amp;rsquo; and &amp;lsquo;reduce&amp;rsquo;.
MapReduce - &amp;lsquo;Map&amp;rsquo; and &amp;lsquo;Reduce&amp;rsquo; Some concepts Job is the unit of work to be performed, it could consist of several map and reduce tasks.</description>
    </item>
    
    <item>
      <title>Advanced Distributed System - Resource Management</title>
      <link>https://shuoyin03.github.io/2024/01/06/distributed-system-resource-management/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/06/distributed-system-resource-management/</guid>
      <description>What are resources? All stuffs needed for maintaining the run of a system are called resources, such as hardware(CPU, storage, network links), software(web services), and datasets. Applications need to share the resources, and we need to consider how to optimize their use with respect to resources available and resources requested by different applications.
One example demonstrating a trade-off between time, price and storage resource is that, we could make a software parallelisable and run it with different expensive processors, but it uses lots of storage because large amount of data are processing at the same time.</description>
    </item>
    
    <item>
      <title>Advanced Distributed System - Fault Tolerance</title>
      <link>https://shuoyin03.github.io/2024/01/05/distributed-system-fault-tolerance/</link>
      <pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/05/distributed-system-fault-tolerance/</guid>
      <description>In a distributed application, we always have to consider the impact of faults and solutions of how we can solve it while balancing the cost, response time and other performances.
Type of Failures First of all, let’s have a look at what type of faults do have.
Omission failures
The server fails to respond/receive to incoming requests and fail to send messages Timing failures
The server fails to respond within a certain time Response failures</description>
    </item>
    
    <item>
      <title>Natural Language Processing - POS Tagging</title>
      <link>https://shuoyin03.github.io/2024/01/04/nlp-pos-tagging/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/04/nlp-pos-tagging/</guid>
      <description>In this article we will have a look at POS tagging, what is it? How do we apply it to NLP tasks?
POS POS - &amp;ldquo;Part of Speech&amp;rdquo;, represent a linguistic category, defined the syntactic or morphological behavior of words. “Traditional” categories contains 8 tags, they are:
verb None Adverb Adjective Interjection Pronoun Preposition Conjunction The previous 5 categories are called the open word classes, which means that these types always have a large amount of vocabularies and new words could be added into these categories.</description>
    </item>
    
    <item>
      <title>Natural Language Processing - Text Representation</title>
      <link>https://shuoyin03.github.io/2023/12/21/nlp-text-representation/</link>
      <pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2023/12/21/nlp-text-representation/</guid>
      <description>In this article we will have a look at how to represent texts in data forms for further nlp processes.
BoW Representation BoW - &amp;ldquo;Bag of words&amp;rdquo;, should be the simplest model, which reduce each document into a bag of words. BoW is an efficient method which nowadays lots of NLP system is using it. However, there are some question we should think of while using it, such as:</description>
    </item>
    
    <item>
      <title>Natural Language Processing - Text Pre-processing</title>
      <link>https://shuoyin03.github.io/2023/12/19/nlp-text-preprocessing/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2023/12/19/nlp-text-preprocessing/</guid>
      <description>In this article, we are going to look at general steps of text pre-processing. Tokenization Word-Based Tokenization Tokenization is the first step of text pre-processing, it is to split a bunch of text into a list of tokens. As an example, we could split “a cat on a pat” to [“a”, “cat”, “on”,</description>
    </item>
    
    <item>
      <title>Advanced Distributed System - Performance Modelling</title>
      <link>https://shuoyin03.github.io/2023/12/13/distributed-system-performance-modelling/</link>
      <pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2023/12/13/distributed-system-performance-modelling/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;It is always good to test the performance of distributed applications to ensure it meets the target, and today we&amp;rsquo;ll learn what is a model and how to build a model to achieve this.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Algorithm and Data Structure - Propositional logic</title>
      <link>https://shuoyin03.github.io/post/comp36111-algorithm/2023-11-13-algorithm-and-data-structure-logic/</link>
      <pubDate>Wed, 29 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/post/comp36111-algorithm/2023-11-13-algorithm-and-data-structure-logic/</guid>
      <description>Propositional Logic Satisfiability Definitions We call $P = \lbrace p_1, p_2, &amp;hellip; \rbrace $ as propositional letters. Every element in $P$ is a formula. If $\psi_1$ and $\psi_2$ are formulas, then the following equations are formulas, too. $$(¬\psi_1), (\psi_1 ∨ \psi_2), (\psi_1 ∧ \psi_2), (\psi_1 → \psi_2)$$
An assignment is a function $\theta: P → \lbrace T, F\rbrace$, for example: In a simple way, an assignment is like a machine running a logic equation and excute a result.</description>
    </item>
    
    <item>
      <title>Algorithm and Data Structure - Time, Space and Determinism</title>
      <link>https://shuoyin03.github.io/post/comp36111-algorithm/2023-11-27-algorithm-and-data-structure-time-space/</link>
      <pubDate>Mon, 27 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/post/comp36111-algorithm/2023-11-27-algorithm-and-data-structure-time-space/</guid>
      <description>1. Introduction to Time and Space Definitions Consider there is a turing machine M with alphabet Σ, and g is a function N → N, we say M runs in time g and runs in space g with at most g(|x|) steps and g(|x|) squares with a finite x many Strings. If there is a language L over some alphabet, we say L runs in Time(g) and Space(g) such that there is a deterministic turing machine M recognizing L runs in time and space g.</description>
    </item>
    
    <item>
      <title>Advanced Distributed System - Big data</title>
      <link>https://shuoyin03.github.io/2023/11/06/distributed-system-big-data/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2023/11/06/distributed-system-big-data/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In a shared nothing infrastructure, data storage, update, access and processing takes place across a collection of networked machines. To enhance the performance, processing needs to be take place in parallel, which we have to distribute data, and that&amp;rsquo;s partition. This article will gives an rough idea of partition techniques and details needs to be consider.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Algorithm and Data Structure - Turing Machine</title>
      <link>https://shuoyin03.github.io/2023/11/06/algorithm-and-data-structure-turing-machine/</link>
      <pubDate>Mon, 06 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2023/11/06/algorithm-and-data-structure-turing-machine/</guid>
      <description>In this article, we are going to look at the formal definition of Turing Machine and the therom with it.
Introduction of turing machine The picture below is a multi-tape turing machine Definition In a formal definition, a turing machine could be define as a quintuple:
M = [ K, Σ, Q, q0, T ]
K ≥ 2 (number of tapes) Σ is a non-empty, finite set (alphabet) Q is a non-empty, finite set (set of states) q0 ∈ Q (initial state) T is a set of transitions (for K, Σ and Q) Symbol A symbol is an element of which means blank and start separately.</description>
    </item>
    
  </channel>
</rss>
