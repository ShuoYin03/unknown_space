[{"author":null,"categories":["notes"],"content":"Introduction to programming of robots","date":1709078400,"description":"Introduction to programming of robots","dir":"post\\COMP34212-CognitiveRobots\\","excerpt_html":"Introduction to programming of robots","excerpt_text":"Introduction to programming of robots","expirydate":-62135596800,"fuzzywordcount":400,"html":"Introduction to programming of robots","keywords":null,"kind":"page","lang":"en","lastmod":1709078400,"objectID":"4d9ec425009db462013d6820cd069442","permalink":"https://shuoyin03.github.io/2024/02/28/cognitive-robotics-robot-software/","publishdate":"2024-02-28T00:00:00Z","readingtime":2,"relpermalink":"/2024/02/28/cognitive-robotics-robot-software/","section":"post","summary":"Autonomous Robot Workflow A autonomous robot workflow would be like this: the sensors collect data from the real-world environment, experienced the learning process sensing, reasoning, and acting. Then it give its feedback, doing some movements or actions by sensors. The code below is a great example, where the first line is getting the information from outside world, and the second line is doing some reasoning, limit the distance, and if the distance is less than 0.","tags":["Cognitive Robotics"],"title":"Cognitive Robotics - Robot Software","type":"post","url":"/2024/02/28/cognitive-robotics-robot-software/","weight":0,"wordcount":315},{"author":null,"categories":["notes"],"content":"Introduction to deep learning in robotics","date":1708992000,"description":"Introduction to deep learning in robotics","dir":"post\\COMP34212-CognitiveRobots\\","excerpt_html":"Introduction to deep learning in robotics","excerpt_text":"Introduction to deep learning in robotics","expirydate":-62135596800,"fuzzywordcount":500,"html":"Introduction to deep learning in robotics","keywords":null,"kind":"page","lang":"en","lastmod":1708992000,"objectID":"b154915791c9b6e8f2be2d0384f67137","permalink":"https://shuoyin03.github.io/2024/02/27/cognitive-robotics-deep-learning/","publishdate":"2024-02-27T00:00:00Z","readingtime":2,"relpermalink":"/2024/02/27/cognitive-robotics-deep-learning/","section":"post","summary":"This blog is a supplement of deep learning topic as we already explain the fundamental knowledge in this blog: Natural Language Processing - Deep Learning I, where we will mainly focuses on CNN.\nWhy Deep Learning? The reason why we apply deep learning techniques are quite obvious, which is to ues it handle thee robots\u0026rsquo; vision. The advantage of neural network is learning and building up features to represent the input data, which help us remove the complex and limit feature selection process.","tags":["Cognitive Robotics"],"title":"Cognitive Robotics - Deep Learning in Robotics","type":"post","url":"/2024/02/27/cognitive-robotics-deep-learning/","weight":0,"wordcount":417},{"author":null,"categories":["notes"],"content":"Introduction to natural language understanding","date":1708905600,"description":"Introduction to natural language understanding","dir":"post\\COMP34812-NLU\\","excerpt_html":"Introduction to natural language understanding","excerpt_text":"Introduction to natural language understanding","expirydate":-62135596800,"fuzzywordcount":700,"html":"Introduction to natural language understanding","keywords":null,"kind":"page","lang":"en","lastmod":1708905600,"objectID":"a235c61b4812fd2d22458cdd78a7fb44","permalink":"https://shuoyin03.github.io/2024/02/26/nlu-introduction/","publishdate":"2024-02-26T00:00:00Z","readingtime":3,"relpermalink":"/2024/02/26/nlu-introduction/","section":"post","summary":"What is NLU? In the previous blogs I mainly focused on NLP, which refers to processing unstructured data(texts) into structured data by tokenization, lemmatisation, stemming, etc. NLU will more focus on making sure the initial meaning of language and let the machine recognize it while understanding the changes within texts.\nSuch applications of NLU could be make the answers of chatbot more natural like human reaction, it could make machines more intelligent.","tags":["NLU"],"title":"Natural Language Understanding - Introduction \u0026 Embedding \u0026 Model","type":"post","url":"/2024/02/26/nlu-introduction/","weight":0,"wordcount":602},{"author":null,"categories":["notes"],"content":"Introduction to Robots' motion","date":1708300800,"description":"Introduction to Robots' motion","dir":"post\\COMP34212-CognitiveRobots\\","excerpt_html":"Introduction to Robots' motion","excerpt_text":"Introduction to Robots' motion","expirydate":-62135596800,"fuzzywordcount":1800,"html":"Introduction to Robots' motion","keywords":null,"kind":"page","lang":"en","lastmod":1708300800,"objectID":"9e28c815e432f12d33412f74e6094624","permalink":"https://shuoyin03.github.io/2024/02/19/cognitive-robotics-sensors-navigation/","publishdate":"2024-02-19T00:00:00Z","readingtime":9,"relpermalink":"/2024/02/19/cognitive-robotics-sensors-navigation/","section":"post","summary":"In this blog, we will discuss about the navigation - how will the robots go the destination we want them to go?\nNavigation Navigation, which in definition it means moving the entire robot from one location to another, this question could also refers to some destination planning. The difference between navigation and manipulation is that, manipulation refers to the problems moving body part to manipulate the environment.\nLocomotion Locomotion are the methods to achieve navigation, there are three types of locomotion:","tags":["Cognitive Robotics"],"title":"Cognitive Robotics - Navigation","type":"post","url":"/2024/02/19/cognitive-robotics-sensors-navigation/","weight":0,"wordcount":1737},{"author":null,"categories":["notes"],"content":"Introduction to different sensors and actuators","date":1707868800,"description":"Introduction to different sensors and actuators","dir":"post\\COMP34212-CognitiveRobots\\","excerpt_html":"Introduction to different sensors and actuators","excerpt_text":"Introduction to different sensors and actuators","expirydate":-62135596800,"fuzzywordcount":2000,"html":"Introduction to different sensors and actuators","keywords":null,"kind":"page","lang":"en","lastmod":1707868800,"objectID":"90ad14b41287e9ca7fb5653d8e537de5","permalink":"https://shuoyin03.github.io/2024/02/14/cognitive-robotics-sensors-and-actuators/","publishdate":"2024-02-14T00:00:00Z","readingtime":10,"relpermalink":"/2024/02/14/cognitive-robotics-sensors-and-actuators/","section":"post","summary":"A robot is mainly consist of 4 components, which is:\nPhysical Body Sensors Effectors and actuators Controller Here we will mainly talk about effectors, actuators and sensors.\nActuators, Effectors and Actions Effectors are any device that can make an effect on the environment, for example, the arms on human body or robot body. And Actuators are devices which enables effectors to execute movements. For example, muscles and electric motors. Note that one effector must have one actuator to support it.","tags":["Cognitive Robotics"],"title":"Cognitive Robotics - Sensors and Actuators","type":"post","url":"/2024/02/14/cognitive-robotics-sensors-and-actuators/","weight":0,"wordcount":1930},{"author":null,"categories":["notes"],"content":"Introduced different ciphers and applications of them in real-world","date":1707177600,"description":"Introduced different ciphers and applications of them in real-world","dir":"post\\COMP38412-CyberSecurity\\","excerpt_html":"Introduced different ciphers and applications of them in real-world","excerpt_text":"Introduced different ciphers and applications of them in real-world","expirydate":-62135596800,"fuzzywordcount":2700,"html":"Introduced different ciphers and applications of them in real-world","keywords":null,"kind":"page","lang":"en","lastmod":1707177600,"objectID":"684bd970a0f205c161c8c69d3e6ca8eb","permalink":"https://shuoyin03.github.io/2024/01/31/cyber-security-cryptography/","publishdate":"2024-02-06T00:00:00Z","readingtime":13,"relpermalink":"/2024/01/31/cyber-security-cryptography/","section":"post","summary":"In order to keep messages secure, they are two measures, one is two prevent the messages is access by un-authorized party, and another one is, secure messages so that even the message is leaked, the attacker couldn\u0026rsquo;t understand the message, and this is achieved by cryptography.\nIntroduction To Cryptography Cryptography is a crucial part of cybersecurity toolbox, which could be applied to various properties and services, for example:\nConfidentiality (secrecy, privacy) of data in transmission \u0026amp; in storage.","tags":["Cyber Security"],"title":"Cyber Security - Cryptography","type":"post","url":"/2024/01/31/cyber-security-cryptography/","weight":0,"wordcount":2634},{"author":null,"categories":["notes"],"content":"Introduction to some basics definitions","date":1707091200,"description":"Introduction to some basics definitions","dir":"post\\COMP34212-CognitiveRobots\\","excerpt_html":"Introduction to some basics definitions","excerpt_text":"Introduction to some basics definitions","expirydate":-62135596800,"fuzzywordcount":1400,"html":"Introduction to some basics definitions","keywords":null,"kind":"page","lang":"en","lastmod":1707091200,"objectID":"79a093ccd3bf343746b29268d96a7217","permalink":"https://shuoyin03.github.io/2024/02/05/cognitive-robotics-introduction/","publishdate":"2024-02-05T00:00:00Z","readingtime":7,"relpermalink":"/2024/02/05/cognitive-robotics-introduction/","section":"post","summary":"What are Robots? A robot, is a machine capable of carrying out a complex series of actions automatically, especially one programmable by a computer. Also, it could be described as an autonomous system which exists in the physical world, can sense its environment, and can act on it to achieve some goals. There are many types of robots that we define today. For example, they are:\nHumanoid Android Biomimetic Industrial (manipulation, navigation) Medical Assistive Humanoid Robots A humanoid robot has an anthropomorphic body plan and actuators with human-like senses for human-robot interaction.","tags":["Cognitive Robotics"],"title":"Cognitive Robotics - Introduction","type":"post","url":"/2024/02/05/cognitive-robotics-introduction/","weight":0,"wordcount":1365},{"author":null,"categories":["notes"],"content":"Introduced the what threats do we have in the our world, security properties and models","date":1706659200,"description":"Introduced the what threats do we have in the our world, security properties and models","dir":"post\\COMP38412-CyberSecurity\\","excerpt_html":"Introduced the what threats do we have in the our world, security properties and models","excerpt_text":"Introduced the what threats do we have in the our world, security properties and models","expirydate":-62135596800,"fuzzywordcount":1300,"html":"Introduced the what threats do we have in the our world, security properties and models","keywords":null,"kind":"page","lang":"en","lastmod":1706659200,"objectID":"70a648f23374ecdcf707abaa8ca9299e","permalink":"https://shuoyin03.github.io/2024/01/31/cyber-security-basics/","publishdate":"2024-01-31T00:00:00Z","readingtime":6,"relpermalink":"/2024/01/31/cyber-security-basics/","section":"post","summary":"Currently in our world, there are a huge amount of attacks occurring everyday, bringing unpredictable loss to individuals, organizations or even governments. Such attacks could be: Malware, Ransomware, Adware, Hacking, Spoofing, Phishing, Pharming, DDoS\u0026hellip; It is important that we care about security in the development of anything. In definition, there are three aspects in security, which are confidentiality, Integrity and Availability.\nCIA Triad Confidentiality\nThe confidentiality contains two definitions, data confidentiality and privacy.","tags":["Cyber Security"],"title":"Cyber Security - Basics","type":"post","url":"/2024/01/31/cyber-security-basics/","weight":0,"wordcount":1259},{"author":null,"categories":["notes"],"content":"Record the process of solving leetcode and try to form a knowledge system of algorithms and data structures","date":1705363200,"description":"Record the process of solving leetcode and try to form a knowledge system of algorithms and data structures","dir":"post\\Leetcode-Diary\\","excerpt_html":"Record the process of solving leetcode and try to form a knowledge system of algorithms and data structures","excerpt_text":"Record the process of solving leetcode and try to form a knowledge system of algorithms and data structures","expirydate":-62135596800,"fuzzywordcount":300,"html":"Record the process of solving leetcode and try to form a knowledge system of algorithms and data structures","keywords":null,"kind":"page","lang":"en","lastmod":1705363200,"objectID":"263c54418eca057519b3d3ddb868ad9e","permalink":"https://shuoyin03.github.io/2024/01/16/leetcode-beginning/","publishdate":"2024-01-16T00:00:00Z","readingtime":1,"relpermalink":"/2024/01/16/leetcode-beginning/","section":"post","summary":"Yesterday I have just complete the online assessment of booking.com, which I still feel a little bit frustrated - I could make lots of mistakes and stuck in such easy \u0026ldquo;algorithm\u0026rdquo; questions. During this process I could find lots of problems in my mindset, including but not limited to:\nLack of the ability analyzing the corner cases, make changes to algorithm based on the corner cases Lack of awareness of algorithms.","tags":["Leetcode","Algorithm","Data Structure"],"title":"Leetcode journal - Beginning","type":"post","url":"/2024/01/16/leetcode-beginning/","weight":0,"wordcount":212},{"author":null,"categories":["notes"],"content":"Neural Networks","date":1705363200,"description":"Neural Networks","dir":"post\\COMP33511-NLP\\","excerpt_html":"Neural Networks","excerpt_text":"Neural Networks","expirydate":-62135596800,"fuzzywordcount":1500,"html":"Neural Networks","keywords":null,"kind":"page","lang":"en","lastmod":1705363200,"objectID":"730770abb819da73db15cb8e545ac659","permalink":"https://shuoyin03.github.io/2024/01/16/nlp-deep-learning1/","publishdate":"2024-01-16T00:00:00Z","readingtime":3,"relpermalink":"/2024/01/16/nlp-deep-learning1/","section":"post","summary":"Basic Neural Network Structure Single neuron, the most basic components of neural networks, consist of multiple inputs $[x_1, x_2, \u0026hellip;, x_d]$ and an output $y$. The above picture demonstrated, each input $x$ is multiply by a weight $w$, their sum is added with a bias and then activated by a activation function. The training process, is to find the best y value from updating the weight in each training epoch.","tags":["nlp"],"title":"Natural Language Processing - Deep Learning I","type":"post","url":"/2024/01/16/nlp-deep-learning1/","weight":0,"wordcount":1494},{"author":null,"categories":["notes"],"content":"Introduce NoSQL","date":1705017600,"description":"Introduce NoSQL","dir":"post\\COMP38311-Distributed-System\\","excerpt_html":"Introduce NoSQL","excerpt_text":"Introduce NoSQL","expirydate":-62135596800,"fuzzywordcount":1300,"html":"Introduce NoSQL","keywords":null,"kind":"page","lang":"en","lastmod":1705017600,"objectID":"f00726af74877d42b6d4bbf86f16d2ee","permalink":"https://shuoyin03.github.io/2024/01/12/distributed-system-nosql/","publishdate":"2024-01-12T00:00:00Z","readingtime":6,"relpermalink":"/2024/01/12/distributed-system-nosql/","section":"post","summary":"Unlike SQL focus on data integrity and strict transactional semantics, NoSQL focus on all applications need elastic scaling and simple operations, which operating data in isolation, some characteristics of NoSQL are: expose a simple call-level interface or protocol, offer less strict transactional guarantees, replicate and distribute data over servers\u0026hellip; Let\u0026rsquo;s have a look at NoSQL in this blog.\nTypes of NoSQL We could define NoSQL into three types: Key-Value, Document, and Wide Column.","tags":["Distributed System"],"title":"Advanced Distributed System - NoSQL","type":"post","url":"/2024/01/12/distributed-system-nosql/","weight":0,"wordcount":1252},{"author":null,"categories":["notes"],"content":"Introducing Batching processing, MapReduce and Hadoop","date":1704758400,"description":"Introducing Batching processing, MapReduce and Hadoop","dir":"post\\COMP38311-Distributed-System\\","excerpt_html":"Introducing Batching processing, MapReduce and Hadoop","excerpt_text":"Introducing Batching processing, MapReduce and Hadoop","expirydate":-62135596800,"fuzzywordcount":900,"html":"Introducing Batching processing, MapReduce and Hadoop","keywords":null,"kind":"page","lang":"en","lastmod":1704758400,"objectID":"9605934a920ca3021c3114f2da98fd67","permalink":"https://shuoyin03.github.io/2024/01/09/distributed-system-big-data/","publishdate":"2024-01-09T00:00:00Z","readingtime":5,"relpermalink":"/2024/01/09/distributed-system-big-data/","section":"post","summary":"Batch processing - a word describing tasks that can run without user interactions, or can be scheduled to run as resources permit. Batch data sets might be huge and need parallel processing. MapReduce is a programming model designed for batch processing, including two steps: \u0026lsquo;map\u0026rsquo; and \u0026lsquo;reduce\u0026rsquo;.\nMapReduce - \u0026lsquo;Map\u0026rsquo; and \u0026lsquo;Reduce\u0026rsquo; Some concepts Job is the unit of work to be performed, it could consist of several map and reduce tasks.","tags":["Distributed System"],"title":"Advanced Distributed System - Batch Data and MapReduce","type":"post","url":"/2024/01/09/distributed-system-big-data/","weight":0,"wordcount":894},{"author":null,"categories":["notes"],"content":"Introduce how to take faults into our consideration","date":1704499200,"description":"Introduce how to take faults into our consideration","dir":"post\\COMP38311-Distributed-System\\","excerpt_html":"Introduce how to take faults into our consideration","excerpt_text":"Introduce how to take faults into our consideration","expirydate":-62135596800,"fuzzywordcount":400,"html":"Introduce how to take faults into our consideration","keywords":null,"kind":"page","lang":"en","lastmod":1704499200,"objectID":"4b371c617689780bbd048a7feeb2a43d","permalink":"https://shuoyin03.github.io/2024/01/06/distributed-system-resource-management/","publishdate":"2024-01-06T00:00:00Z","readingtime":2,"relpermalink":"/2024/01/06/distributed-system-resource-management/","section":"post","summary":"What are resources? All stuffs needed for maintaining the run of a system are called resources, such as hardware(CPU, storage, network links), software(web services), and datasets. Applications need to share the resources, and we need to consider how to optimize their use with respect to resources available and resources requested by different applications.\nOne example demonstrating a trade-off between time, price and storage resource is that, we could make a software parallelisable and run it with different expensive processors, but it uses lots of storage because large amount of data are processing at the same time.","tags":["Distributed System"],"title":"Advanced Distributed System - Resource Management","type":"post","url":"/2024/01/06/distributed-system-resource-management/","weight":0,"wordcount":376},{"author":null,"categories":["notes"],"content":"Introduce how to take faults into our consideration","date":1704412800,"description":"Introduce how to take faults into our consideration","dir":"post\\COMP38311-Distributed-System\\","excerpt_html":"Introduce how to take faults into our consideration","excerpt_text":"Introduce how to take faults into our consideration","expirydate":-62135596800,"fuzzywordcount":800,"html":"Introduce how to take faults into our consideration","keywords":null,"kind":"page","lang":"en","lastmod":1704412800,"objectID":"855af328629de73be66cd58d362033e0","permalink":"https://shuoyin03.github.io/2024/01/05/distributed-system-fault-tolerance/","publishdate":"2024-01-05T00:00:00Z","readingtime":4,"relpermalink":"/2024/01/05/distributed-system-fault-tolerance/","section":"post","summary":"In a distributed application, we always have to consider the impact of faults and solutions of how we can solve it while balancing the cost, response time and other performances.\nType of Failures First of all, let’s have a look at what type of faults do have.\nOmission failures\nThe server fails to respond/receive to incoming requests and fail to send messages Timing failures\nThe server fails to respond within a certain time Response failures","tags":["Distributed System"],"title":"Advanced Distributed System - Fault Tolerance","type":"post","url":"/2024/01/05/distributed-system-fault-tolerance/","weight":0,"wordcount":759},{"author":null,"categories":["notes"],"content":"Introduced the POS tagging, what is it? How do we apply it to NLP tasks?","date":1704326400,"description":"Introduced the POS tagging, what is it? How do we apply it to NLP tasks?","dir":"post\\COMP33511-NLP\\","excerpt_html":"Introduced the POS tagging, what is it? How do we apply it to NLP tasks?","excerpt_text":"Introduced the POS tagging, what is it? How do we apply it to NLP tasks?","expirydate":-62135596800,"fuzzywordcount":1000,"html":"Introduced the POS tagging, what is it? How do we apply it to NLP tasks?","keywords":null,"kind":"page","lang":"en","lastmod":1704326400,"objectID":"e12ad305b48ad5e653793ce2e23cd082","permalink":"https://shuoyin03.github.io/2024/01/04/nlp-pos-tagging/","publishdate":"2024-01-04T00:00:00Z","readingtime":5,"relpermalink":"/2024/01/04/nlp-pos-tagging/","section":"post","summary":"In this article we will have a look at POS tagging, what is it? How do we apply it to NLP tasks?\nPOS POS - \u0026ldquo;Part of Speech\u0026rdquo;, represent a linguistic category, defined the syntactic or morphological behavior of words. “Traditional” categories contains 8 tags, they are:\nverb None Adverb Adjective Interjection Pronoun Preposition Conjunction The previous 5 categories are called the open word classes, which means that these types always have a large amount of vocabularies and new words could be added into these categories.","tags":["nlp"],"title":"Natural Language Processing - POS Tagging","type":"post","url":"/2024/01/04/nlp-pos-tagging/","weight":0,"wordcount":964},{"author":null,"categories":["notes"],"content":"Introduce how to represent texts in data forms for further nlp processes","date":1703116800,"description":"Introduce how to represent texts in data forms for further nlp processes","dir":"post\\COMP33511-NLP\\","excerpt_html":"Introduce how to represent texts in data forms for further nlp processes","excerpt_text":"Introduce how to represent texts in data forms for further nlp processes","expirydate":-62135596800,"fuzzywordcount":1300,"html":"Introduce how to represent texts in data forms for further nlp processes","keywords":null,"kind":"page","lang":"en","lastmod":1703116800,"objectID":"da1e36847c366c71e34b211fb98fe70f","permalink":"https://shuoyin03.github.io/2023/12/21/nlp-text-representation/","publishdate":"2023-12-21T00:00:00Z","readingtime":6,"relpermalink":"/2023/12/21/nlp-text-representation/","section":"post","summary":"In this article we will have a look at how to represent texts in data forms for further nlp processes.\nBoW Representation BoW - \u0026ldquo;Bag of words\u0026rdquo;, should be the simplest model, which reduce each document into a bag of words. BoW is an efficient method which nowadays lots of NLP system is using it. However, there are some question we should think of while using it, such as:","tags":["nlp"],"title":"Natural Language Processing - Text Representation","type":"post","url":"/2023/12/21/nlp-text-representation/","weight":0,"wordcount":1239},{"author":null,"categories":["notes"],"content":"Introduce tokenisation and Normalisation","date":1702944000,"description":"Introduce tokenisation and Normalisation","dir":"post\\COMP33511-NLP\\","excerpt_html":"Introduce tokenisation and Normalisation","excerpt_text":"Introduce tokenisation and Normalisation","expirydate":-62135596800,"fuzzywordcount":900,"html":"Introduce tokenisation and Normalisation","keywords":null,"kind":"page","lang":"en","lastmod":1702944000,"objectID":"4778a92bcb4edc48d2d16f05a04daba6","permalink":"https://shuoyin03.github.io/2023/12/19/nlp-text-preprocessing/","publishdate":"2023-12-19T00:00:00Z","readingtime":2,"relpermalink":"/2023/12/19/nlp-text-preprocessing/","section":"post","summary":"In this article, we are going to look at general steps of text pre-processing. Tokenization Word-Based Tokenization Tokenization is the first step of text pre-processing, it is to split a bunch of text into a list of tokens. As an example, we could split “a cat on a pat” to [“a”, “cat”, “on”,","tags":["nlp"],"title":"Natural Language Processing - Text Pre-processing","type":"post","url":"/2023/12/19/nlp-text-preprocessing/","weight":0,"wordcount":802},{"author":null,"categories":["notes"],"content":"Introduce how to model the performance of distributed application","date":1702339200,"description":"Introduce how to model the performance of distributed application","dir":"post\\COMP38311-Distributed-System\\","excerpt_html":"Introduce how to model the performance of distributed application","excerpt_text":"Introduce how to model the performance of distributed application","expirydate":-62135596800,"fuzzywordcount":500,"html":"Introduce how to model the performance of distributed application","keywords":null,"kind":"page","lang":"en","lastmod":1702339200,"objectID":"9f68afbd362724abfb7b95a2aa1ab83f","permalink":"https://shuoyin03.github.io/2023/12/13/distributed-system-performance-modelling/","publishdate":"2023-12-12T00:00:00Z","readingtime":3,"relpermalink":"/2023/12/13/distributed-system-performance-modelling/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eIt is always good to test the performance of distributed applications to ensure it meets the target, and today we\u0026rsquo;ll learn what is a model and how to build a model to achieve this.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Distributed System"],"title":"Advanced Distributed System - Performance Modelling","type":"post","url":"/2023/12/13/distributed-system-performance-modelling/","weight":0,"wordcount":451},{"author":null,"categories":["notes"],"content":"Introduce propositional logic","date":1701216000,"description":"Introduce propositional logic","dir":"post\\COMP36111-Algorithm\\","excerpt_html":"Introduce propositional logic","excerpt_text":"Introduce propositional logic","expirydate":-62135596800,"fuzzywordcount":500,"html":"Introduce propositional logic","keywords":null,"kind":"page","lang":"en","lastmod":1701216000,"objectID":"e9c82d47a65215c0501146a9e86cc9fd","permalink":"https://shuoyin03.github.io/post/comp36111-algorithm/2023-11-13-algorithm-and-data-structure-logic/","publishdate":"2023-11-29T00:00:00Z","readingtime":3,"relpermalink":"/post/comp36111-algorithm/2023-11-13-algorithm-and-data-structure-logic/","section":"post","summary":"Propositional Logic Satisfiability Definitions We call $P = \\lbrace p_1, p_2, \u0026hellip; \\rbrace $ as propositional letters. Every element in $P$ is a formula. If $\\psi_1$ and $\\psi_2$ are formulas, then the following equations are formulas, too. $$(¬\\psi_1), (\\psi_1 ∨ \\psi_2), (\\psi_1 ∧ \\psi_2), (\\psi_1 → \\psi_2)$$\nAn assignment is a function $\\theta: P → \\lbrace T, F\\rbrace$, for example: In a simple way, an assignment is like a machine running a logic equation and excute a result.","tags":["Algorithm","Data Structure"],"title":"Algorithm and Data Structure - Propositional logic","type":"post","url":"/post/comp36111-algorithm/2023-11-13-algorithm-and-data-structure-logic/","weight":0,"wordcount":450},{"author":null,"categories":["notes"],"content":"Introduction to the theorem of time and space complexity in turing machine","date":1701043200,"description":"Introduction to the theorem of time and space complexity in turing machine","dir":"post\\COMP36111-Algorithm\\","excerpt_html":"Introduction to the theorem of time and space complexity in turing machine","excerpt_text":"Introduction to the theorem of time and space complexity in turing machine","expirydate":-62135596800,"fuzzywordcount":1100,"html":"Introduction to the theorem of time and space complexity in turing machine","keywords":null,"kind":"page","lang":"en","lastmod":1701043200,"objectID":"392f3bba4e35b4c4cf85d4a026aea374","permalink":"https://shuoyin03.github.io/post/comp36111-algorithm/2023-11-27-algorithm-and-data-structure-time-space/","publishdate":"2023-11-27T00:00:00Z","readingtime":5,"relpermalink":"/post/comp36111-algorithm/2023-11-27-algorithm-and-data-structure-time-space/","section":"post","summary":"1. Introduction to Time and Space Definitions Consider there is a turing machine M with alphabet Σ, and g is a function N → N, we say M runs in time g and runs in space g with at most g(|x|) steps and g(|x|) squares with a finite x many Strings. If there is a language L over some alphabet, we say L runs in Time(g) and Space(g) such that there is a deterministic turing machine M recognizing L runs in time and space g.","tags":["Algorithm","Data Structure"],"title":"Algorithm and Data Structure - Time, Space and Determinism","type":"post","url":"/post/comp36111-algorithm/2023-11-27-algorithm-and-data-structure-time-space/","weight":0,"wordcount":1015},{"author":null,"categories":["post"],"content":"Basic introduction of Google search engine, and a guideline of how to add your website in to search result","date":1700956800,"description":"Basic introduction of Google search engine, and a guideline of how to add your website in to search result","dir":"post\\Hugo\\","excerpt_html":"Basic introduction of Google search engine, and a guideline of how to add your website in to search result","excerpt_text":"Basic introduction of Google search engine, and a guideline of how to add your website in to search result","expirydate":-62135596800,"fuzzywordcount":700,"html":"Basic introduction of Google search engine, and a guideline of how to add your website in to search result","keywords":null,"kind":"page","lang":"en","lastmod":1700956800,"objectID":"6882dd26237cf7a61d2a9beb9cf9d386","permalink":"https://shuoyin03.github.io/post/hugo/2023-11-18-hugo-google-search/","publishdate":"2023-11-26T00:00:00Z","readingtime":4,"relpermalink":"/post/hugo/2023-11-18-hugo-google-search/","section":"post","summary":"After create the blog, of course we want to show it to others and let people search it. Today we will look at how we could put our website on google.\nBasic introduction to Google Search Engine Before we start, it is necessary for us to have a basic understanding about google search engine.\nCrawling Google is using crawl programs which is called Googlebot to crawl new websites and updates on the internet, The bot regularly searches and store new sites into a huge database.","tags":["hugo"],"title":"How to let Google search your website?","type":"post","url":"/post/hugo/2023-11-18-hugo-google-search/","weight":0,"wordcount":662},{"author":null,"categories":["notes"],"content":"Introduced the distributed system, trade-offs in big data","date":1699228800,"description":"Introduced the distributed system, trade-offs in big data","dir":"post\\COMP38311-Distributed-System\\","excerpt_html":"Introduced the distributed system, trade-offs in big data","excerpt_text":"Introduced the distributed system, trade-offs in big data","expirydate":-62135596800,"fuzzywordcount":900,"html":"Introduced the distributed system, trade-offs in big data","keywords":null,"kind":"page","lang":"en","lastmod":1699228800,"objectID":"b5db14b9e1a7e2d3c13f6ff3fe4bc9a6","permalink":"https://shuoyin03.github.io/2023/11/06/distributed-system-big-data/","publishdate":"2023-11-06T00:00:00Z","readingtime":4,"relpermalink":"/2023/11/06/distributed-system-big-data/","section":"post","summary":"\u003cblockquote\u003e\n\u003cp\u003eIn a shared nothing infrastructure, data storage, update, access and processing takes place across a collection of networked machines. To enhance the performance, processing needs to be take place in parallel, which we have to distribute data, and that\u0026rsquo;s partition. This article will gives an rough idea of partition techniques and details needs to be consider.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Distributed System"],"title":"Advanced Distributed System - Big data","type":"post","url":"/2023/11/06/distributed-system-big-data/","weight":0,"wordcount":810},{"author":null,"categories":["notes"],"content":"Introduced Turing Machine, and the theory behind it","date":1699228800,"description":"Introduced Turing Machine, and the theory behind it","dir":"post\\COMP36111-Algorithm\\","excerpt_html":"Introduced Turing Machine, and the theory behind it","excerpt_text":"Introduced Turing Machine, and the theory behind it","expirydate":-62135596800,"fuzzywordcount":1000,"html":"Introduced Turing Machine, and the theory behind it","keywords":null,"kind":"page","lang":"en","lastmod":1699228800,"objectID":"888d14496dba93c718e8805679eab78a","permalink":"https://shuoyin03.github.io/2023/11/06/algorithm-and-data-structure-turing-machine/","publishdate":"2023-11-06T00:00:00Z","readingtime":5,"relpermalink":"/2023/11/06/algorithm-and-data-structure-turing-machine/","section":"post","summary":"In this article, we are going to look at the formal definition of Turing Machine and the therom with it.\nIntroduction of turing machine The picture below is a multi-tape turing machine Definition In a formal definition, a turing machine could be define as a quintuple:\nM = [ K, Σ, Q, q0, T ]\nK ≥ 2 (number of tapes) Σ is a non-empty, finite set (alphabet) Q is a non-empty, finite set (set of states) q0 ∈ Q (initial state) T is a set of transitions (for K, Σ and Q) Symbol A symbol is an element of which means blank and start separately.","tags":["Algorithm","Data Structure"],"title":"Algorithm and Data Structure - Turing Machine","type":"post","url":"/2023/11/06/algorithm-and-data-structure-turing-machine/","weight":0,"wordcount":933},{"author":null,"categories":["post"],"content":"This article introduces the use of Hugo as the blog source code, Github Page as the deployment solution and the use of Github Action to configure CI/CD","date":1698926400,"description":"This article introduces the use of Hugo as the blog source code, Github Page as the deployment solution and the use of Github Action to configure CI/CD","dir":"post\\Hugo\\","excerpt_html":"This article introduces the use of Hugo as the blog source code, Github Page as the deployment solution and the use of Github Action to configure CI/CD","excerpt_text":"This article introduces the use of Hugo as the blog source code, Github Page as the deployment solution and the use of Github Action to configure CI/CD","expirydate":-62135596800,"fuzzywordcount":1400,"html":"This article introduces the use of Hugo as the blog source code, Github Page as the deployment solution and the use of Github Action to configure CI/CD","keywords":null,"kind":"page","lang":"en","lastmod":1698926400,"objectID":"e9a11fc9d16e6350f19139be07945dbe","permalink":"https://shuoyin03.github.io/2023/11/03/HugoSetUp/","publishdate":"2023-11-02T12:00:00Z","readingtime":3,"relpermalink":"/2023/11/03/HugoSetUp/","section":"post","summary":"\u003c!-- \u003e记忆里自从2021年开始就计划着要弄博客，结果一直想法大于行动，一直拖到了现在才弄好，老拖延症了，这里分享一下我创建博客的过程以便大家参考与复制 --\u003e\r\n\u003cblockquote\u003e\n\u003cp\u003eIn my memory, I have been planning to start a blog since 2021, but the idea has always been greater than the action. It has been delayed until now. I am an old procrastinator\u0026hellip; I will share my process of creating a blog for your reference and copying.\u003c/p\u003e\n\u003c/blockquote\u003e","tags":["Hugo"],"title":"Hugo + Github Pages + Github Actions Blog deployment plan","type":"post","url":"/2023/11/03/HugoSetUp/","weight":0,"wordcount":1305},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"about\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":200,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://shuoyin03.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","summary":"About Me Hi there! my name is Shuo Yin, a software engineer and a student who currently studying computer science in the University of Manchester. I love learning and using different technologies, and I\u0026rsquo;m always on the road of discovring.\nI am working as a part-time software engineer in |Sportandmusic, which I mainly focus on automation tasks using python and various APIs.\nWhile I am free, I am a blog writer, a Vinyl lover, a song writer and sometimes a hacker (joining hackathons!","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":118},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"notes\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"1ede8046f9c3a02d422dea7bbf324e64","permalink":"https://shuoyin03.github.io/notes/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/notes/","section":"","summary":"","tags":null,"title":"","type":"page","url":"/notes/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":null,"date":-62135596800,"description":"","dir":"search\\","excerpt_html":null,"excerpt_text":null,"expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8946788897930c0c0c39fbfcd30ff2e4","permalink":"https://shuoyin03.github.io/search/placeholder/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/search/placeholder/","section":"search","summary":"","tags":null,"title":"","type":"search","url":"/search/placeholder/","weight":0,"wordcount":0},{"author":null,"categories":null,"content":"Archive of historical posts.","date":-62135596800,"description":"Archive of historical posts.","dir":"archive\\","excerpt_html":"Archive of historical posts.","excerpt_text":"Archive of historical posts.","expirydate":-62135596800,"fuzzywordcount":100,"html":"Archive of historical posts.","keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a06e5ce9eca4c3260843078104889780","permalink":"https://shuoyin03.github.io/archive/","publishdate":"0001-01-01T00:00:00Z","readingtime":0,"relpermalink":"/archive/","section":"","summary":"","tags":null,"title":"Posts Archive","type":"archive","url":"/archive/","weight":0,"wordcount":0}]