<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nlp on UNKNOWN SPACE</title>
    <link>https://shuoyin03.github.io/tags/nlp/</link>
    <description>Recent content in nlp on UNKNOWN SPACE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://shuoyin03.github.io/tags/nlp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Natural Language Processing - Chunking</title>
      <link>https://shuoyin03.github.io/2024/01/04/nlp-chunking/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/04/nlp-chunking/</guid>
      <description>Chunking </description>
    </item>
    
    <item>
      <title>Natural Language Processing - POS Tagging</title>
      <link>https://shuoyin03.github.io/2024/01/04/nlp-pos-tagging/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/04/nlp-pos-tagging/</guid>
      <description>In this article we will have a look at POS tagging, what is it? How do we apply it to NLP tasks?
POS POS - &amp;ldquo;Part of Speech&amp;rdquo;, represent a linguistic category, defined the syntactic or morphological behavior of words. “Traditional” categories contains 8 tags, they are:
verb None Adverb Adjective Interjection Pronoun Preposition Conjunction The previous 5 categories are called the open word classes, which means that these types always have a large amount of vocabularies and new words could be added into these categories.</description>
    </item>
    
    <item>
      <title>Natural Language Processing - Word Senses</title>
      <link>https://shuoyin03.github.io/2024/01/04/nlp-word-senses/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2024/01/04/nlp-word-senses/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Natural Language Processing - Text Representation</title>
      <link>https://shuoyin03.github.io/2023/12/21/nlp-text-representation/</link>
      <pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2023/12/21/nlp-text-representation/</guid>
      <description>In this article we will have a look at how to represent texts in data forms for further nlp processes.
BoW Representation BoW - &amp;ldquo;Bag of words&amp;rdquo;, should be the simplest model, which reduce each document into a bag of words. BoW is an efficient method which nowadays lots of NLP system is using it. However, there are some question we should think of while using it, such as:</description>
    </item>
    
    <item>
      <title>Natural Language Processing - Text Pre-processing</title>
      <link>https://shuoyin03.github.io/2023/12/19/nlp-text-preprocessing/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://shuoyin03.github.io/2023/12/19/nlp-text-preprocessing/</guid>
      <description>In this article, we are going to look at general steps of text pre-processing. Tokenization Word-Based Tokenization Tokenization is the first step of text pre-processing, it is to split a bunch of text into a list of tokens. As an example, we could split “a cat on a pat” to [“a”, “cat”, “on”,</description>
    </item>
    
  </channel>
</rss>
